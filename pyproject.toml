[tool.poetry]
name = "olaf"
version = "0.1.0"
description = "OLAF - Open Learning Autonomous Friend: A modular robotics platform with ROS2, AI integration, and personality-driven interactions"
authors = ["Kamal Kant Singh <kamalkantsingh10@gmail.com>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "orchestrator" }
]

[tool.poetry.dependencies]
python = "^3.10"
# I2C Communication
smbus2 = "^0.4.3"

# AI Integration
anthropic = "^0.18.0"
openai = "^1.12.0"

# Environment Variables
python-dotenv = "^1.0.0"

# Async/Await
asyncio-mqtt = "^0.16.1"

# Utilities
pyyaml = "^6.0"
empy = "^4.2"
lark = "^1.3.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"

# Code Quality
ruff = "^0.3.0"
black = "^24.0.0"
mypy = "^1.8.0"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | install
  | log
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
extend-exclude = ["install", "build", "log"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
exclude = [
    "install/",
    "build/",
    "log/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=orchestrator --cov-report=term-missing"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
